apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-privileged-containers
  annotations:
    policies.kyverno.io/title: Restrict Privileged Containers
    policies.kyverno.io/category: Pod Security
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Containers privilegiados representam um risco significativo de segurança, pois têm 
      acesso completo ao host. Esta política impede a criação de containers
      privilegiados em todos os namespaces, exceto os de sistema.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: check-privileged
      match:
        resources:
          kinds:
            - Pod
      exclude:
        resources:
          namespaces:
            - kube-system
      validate:
        message: "Containers privilegiados são proibidos"
        pattern:
          spec:
            containers:
              - name: "*"
                securityContext:
                  privileged: false
                  privileged: "false"
            initContainers:
              - name: "*"
                securityContext:
                  privileged: "false"

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-hostpath-volumes
  annotations:
    policies.kyverno.io/title: Restrict HostPath Volumes
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: Pod, Volume
    policies.kyverno.io/description: >-
      Restringe o uso de volumes hostPath que montam diretórios do 
      host no pod. O acesso ao sistema de arquivos do host pode levar a
      escalação de privilégios e comprometer a segurança do nó.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: host-path-volumes
      match:
        any:
        - resources:
            kinds:
              - Pod
      exclude:
        resources:
          namespaces:
            - kube-system
            - monitoring
      validate:
        message: "Volumes hostPath não são permitidos. Use PersistentVolumeClaims para armazenamento persistente."
        pattern:
          spec:
            =(volumes):
              - =(hostPath): "null"

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-host-namespaces
  annotations:
    policies.kyverno.io/title: Restrict Host Namespaces
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Restringe o uso de namespaces do host que podem permitir o escape do container.
      Pods com acesso a namespaces do host podem potencialmente comprometer a 
      segurança do cluster.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: host-namespaces
      match:
        any:
        - resources:
            kinds:
              - Pod
      exclude:
        resources:
          namespaces:
            - kube-system
      validate:
        message: "O uso de namespaces do host (hostNetwork, hostPID, hostIPC) não é permitido."
        pattern:
          spec:
            =(hostNetwork): "false"
            =(hostPID): "false"
            =(hostIPC): "false"

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-seccomp-profile
  annotations:
    policies.kyverno.io/title: Require Seccomp Profile
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Requer que todos os pods usem perfis Seccomp para limitar as chamadas
      de sistema que um contêiner pode fazer, reduzindo a superfície de ataque.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: check-seccomp
      match:
        any:
        - resources:
            kinds:
              - Pod
      exclude:
        resources:
          namespaces:
            - kube-system
      validate:
        message: "Pods devem ter um perfil Seccomp. Use RuntimeDefault como mínimo."
        pattern:
          spec:
            securityContext:
              seccompProfile:
                type: "RuntimeDefault | Localhost"

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: disallow-capabilities
  annotations:
    policies.kyverno.io/title: Disallow Capabilities
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Proíbe capabilities perigosas do Linux que podem ser usadas para realizar
      ações privilegiadas. Capabilities como NET_ADMIN, SYS_ADMIN podem 
      comprometer a segurança do cluster.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: capabilities-check
      match:
        any:
        - resources:
            kinds:
              - Pod
      exclude:
        resources:
          namespaces:
            - kube-system
      validate:
        message: "Capabilities perigosas como NET_ADMIN, SYS_ADMIN, NET_RAW não são permitidas."
        pattern:
          spec:
            containers:
              - name: "*"
                securityContext:
                  capabilities:
                    =(add): ["*"]
                    drop: ["ALL", "NET_RAW"]
            initContainers:
              - name: "*"
                securityContext:
                  capabilities:
                    =(add): ["*"]
                    drop: ["ALL", "NET_RAW"]
    - name: forbidden-capabilities
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: "Capabilities NET_ADMIN, SYS_ADMIN, SYS_PTRACE, SYS_MODULE não são permitidas."
        deny:
          conditions:
            - key: "{{ request.object.spec.containers[].securityContext.capabilities.add[] || `[]` }}"
              operator: AnyIn
              value:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_PTRACE
                - SYS_MODULE

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: restrict-proc-mount
  annotations:
    policies.kyverno.io/title: Restrict Proc Mount
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Restringe o tipo de montagem do diretório /proc para prevenir
      a exposição de informações sensíveis do kernel e do sistema.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: proc-mount
      match:
        any:
        - resources:
            kinds:
              - Pod
      validate:
        message: "Somente o tipo Default de procMount é permitido."
        pattern:
          spec:
            containers:
              - =(securityContext):
                  =(procMount): "Default"
            initContainers:
              - =(securityContext):
                  =(procMount): "Default"

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: require-non-root-user
  annotations:
    policies.kyverno.io/title: Require Non-Root User
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Requer que contêineres sejam executados como usuário não-root e
      restrinjam a escalação de privilégios para melhorar a segurança do contêiner.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: check-runAsNonRoot
      match:
        any:
        - resources:
            kinds:
              - Pod
      exclude:
        resources:
          namespaces:
            - kube-system
            - monitoring
      validate:
        message: "Contêineres devem usar runAsNonRoot: true e allowPrivilegeEscalation: false."
        pattern:
          spec:
            securityContext:
              runAsNonRoot: true
            containers:
              - securityContext:
                  allowPrivilegeEscalation: false
                  runAsNonRoot: true
            initContainers:
              - securityContext:
                  allowPrivilegeEscalation: false
                  runAsNonRoot: true

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: require-resource-limits
  annotations:
    policies.kyverno.io/title: Require Resource Limits
    policies.kyverno.io/category: Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Requer que todos os contêineres definam limites de recursos para
      prevenir ataques de negação de serviço e garantir qualidade de serviço.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: validate-resources
      match:
        any:
        - resources:
            kinds:
              - Pod
      exclude:
        resources:
          namespaces:
            - kube-system
          kinds:
            - Job
            - CronJob
      validate:
        message: "Contêineres devem ter limites de CPU e memória definidos."
        pattern:
          spec:
            containers:
              - resources:
                  limits:
                    memory: "?*"
                    cpu: "?*"
            initContainers:
              - resources:
                  limits:
                    memory: "?*"
                    cpu: "?*" 