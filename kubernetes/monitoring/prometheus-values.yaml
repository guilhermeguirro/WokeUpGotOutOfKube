## Arquivo de configuração do Prometheus Stack para Fintech

# Configuração global
global:
  evaluation_interval: 30s
  scrape_interval: 30s
  external_labels:
    cluster: fintech-production
    environment: production

# Alertmanager
alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname', 'job', 'severity']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack'
      routes:
      - match:
          severity: critical
        receiver: 'pagerduty'
    receivers:
    - name: 'slack'
      slack_configs:
      - api_url: '${SLACK_URL}'
        channel: '#security-alerts'
        send_resolved: true
        title: '{{ template "slack.default.title" . }}'
        text: '{{ template "slack.default.text" . }}'
    - name: 'pagerduty'
      pagerduty_configs:
      - service_key: '${PAGERDUTY_KEY}'
        send_resolved: true
        severity: '{{ if eq .GroupLabels.severity "critical" }}critical{{ else }}warning{{ end }}'
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: istio
    hosts:
      - alertmanager.fintech.internal
    tls:
      - secretName: alertmanager-tls
        hosts:
          - alertmanager.fintech.internal

# Configuração do Prometheus
prometheus:
  prometheusSpec:
    retention: 15d
    retentionSize: 30GB
    resources:
      requests:
        memory: 2Gi
        cpu: 500m
      limits:
        memory: 4Gi
        cpu: 1000m
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    # Adicionar regras personalizadas
    additionalRuleGroups:
      - name: security-rules
        rules:
        - alert: HighRateOfSecurityEvents
          expr: sum(rate(kubernetes_security_events_total{type="policy_violation"}[5m])) > 10
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: "Alta taxa de eventos de segurança"
            description: "Há uma alta taxa de eventos de segurança do tipo policy_violation ({{ $value }})."
        - alert: CriticalVulnerabilityDetected
          expr: sum(container_vulnerabilities{severity="critical"}) > 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "Vulnerabilidade crítica detectada"
            description: "Uma vulnerabilidade crítica foi detectada na imagem {{ $labels.image }}."
        - alert: UnauthorizedAccessAttempt
          expr: sum(rate(authentication_failures_total[5m])) > 5
          for: 5m
          labels:
            severity: high
          annotations:
            summary: "Múltiplas tentativas de acesso não autorizado"
            description: "Várias tentativas de acesso não autorizado foram detectadas ({{ $value }}/min)."
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: istio
    hosts:
      - prometheus.fintech.internal
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.fintech.internal

# Configuração do Grafana
grafana:
  adminPassword: "ChangeMe!2023"  # Alterar para um valor seguro em produção
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: gp2
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'security'
        orgId: 1
        folder: 'Security'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/security
  dashboards:
    security:
      security-dashboard:
        json: |
          # O conteúdo do dashboard de segurança será importado separadamente
        gnetId: null
        datasource: Prometheus
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
    datasources:
      enabled: true
      label: grafana_datasource
  plugins:
    - grafana-piechart-panel
    - grafana-worldmap-panel
    - grafana-kubernetes-app
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: istio
    hosts:
      - grafana.fintech.internal
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.fintech.internal

# NodeExporter
nodeExporter:
  enabled: true

# KubeStateMetrics
kubeStateMetrics:
  enabled: true

# Configuração de ServiceMonitors
prometheusOperator:
  serviceMonitor:
    selfMonitor: true

additionalServiceMonitors:
  - name: "istio-service-monitor"
    selector:
      matchLabels:
        istio: ingressgateway
    namespaceSelector:
      matchNames:
        - istio-system
    endpoints:
      - port: http-monitoring
        interval: 15s
  - name: "vault-service-monitor"
    selector:
      matchLabels:
        app.kubernetes.io/name: vault
    namespaceSelector:
      matchNames:
        - vault
    endpoints:
      - port: http-metrics
        interval: 30s 